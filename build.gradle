plugins {
	id 'org.springframework.boot' version '2.2.5.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
	id 'net.ltgt.apt' version '0.20'
	id 'java'
}

group = 'com.arlam'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation(
			'org.springframework.boot:spring-boot-starter-data-jpa',
			'org.springframework.boot:spring-boot-starter-web',
			'org.springframework.session:spring-session-jdbc',
			'com.querydsl:querydsl-jpa',
			'org.mapstruct:mapstruct:1.3.1.Final'

	)

	compileOnly(
			'org.projectlombok:lombok'
	)

	runtimeOnly(
			'com.h2database:h2',
			'mysql:mysql-connector-java'
	)

	annotationProcessor(
			"org.mapstruct:mapstruct-processor:1.3.1.Final",
			'org.projectlombok:lombok'
	)

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testAnnotationProcessor "org.mapstruct:mapstruct-processor:1.3.1.Final"
}

//querydsl build 스크립트
def querydslDir = "src/main/generated"

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets {
	main {
		java {
			srcDirs = ['src/main/java', querydslDir]
		}
	}
}
configurations {
	querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}

test {
	useJUnitPlatform()
}
